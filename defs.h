// The opcodes and unary/binary operators, as emitted by MicroPython 1.12.

enum class Op : uint8_t {
    //CG< opcodes ../../../git/micropython/py/bc0.h
    LoadConstString        = 0x10,
    LoadName               = 0x11,
    LoadGlobal             = 0x12,
    LoadAttr               = 0x13,
    LoadMethod             = 0x14,
    LoadSuperMethod        = 0x15,
    StoreName              = 0x16,
    StoreGlobal            = 0x17,
    StoreAttr              = 0x18,
    DeleteName             = 0x19,
    DeleteGlobal           = 0x1A,
    ImportName             = 0x1B,
    ImportFrom             = 0x1C,
    MakeClosure            = 0x20,
    MakeClosureDefargs     = 0x21,
    LoadConstSmallInt      = 0x22,
    LoadConstObj           = 0x23,
    LoadFastN              = 0x24,
    LoadDeref              = 0x25,
    StoreFastN             = 0x26,
    StoreDeref             = 0x27,
    DeleteFast             = 0x28,
    DeleteDeref            = 0x29,
    BuildTuple             = 0x2A,
    BuildList              = 0x2B,
    BuildMap               = 0x2C,
    BuildSet               = 0x2D,
    BuildSlice             = 0x2E,
    StoreComp              = 0x2F,
    UnpackSequence         = 0x30,
    UnpackEx               = 0x31,
    MakeFunction           = 0x32,
    MakeFunctionDefargs    = 0x33,
    CallFunction           = 0x34,
    CallFunctionVarKw      = 0x35,
    CallMethod             = 0x36,
    CallMethodVarKw        = 0x37,
    UnwindJump             = 0x40,
    Jump                   = 0x42,
    PopJumpIfTrue          = 0x43,
    PopJumpIfFalse         = 0x44,
    JumpIfTrueOrPop        = 0x45,
    JumpIfFalseOrPop       = 0x46,
    SetupWith              = 0x47,
    SetupExcept            = 0x48,
    SetupFinally           = 0x49,
    PopExceptJump          = 0x4A,
    ForIter                = 0x4B,
    LoadConstFalse         = 0x50,
    LoadConstNone          = 0x51,
    LoadConstTrue          = 0x52,
    LoadNull               = 0x53,
    LoadBuildClass         = 0x54,
    LoadSubscr             = 0x55,
    StoreSubscr            = 0x56,
    DupTop                 = 0x57,
    DupTopTwo              = 0x58,
    PopTop                 = 0x59,
    RotTwo                 = 0x5A,
    RotThree               = 0x5B,
    WithCleanup            = 0x5C,
    EndFinally             = 0x5D,
    GetIter                = 0x5E,
    GetIterStack           = 0x5F,
    StoreMap               = 0x62,
    ReturnValue            = 0x63,
    RaiseLast              = 0x64,
    RaiseObj               = 0x65,
    RaiseFrom              = 0x66,
    YieldValue             = 0x67,
    YieldFrom              = 0x68,
    ImportStar             = 0x69,
    //CG>
    LoadConstSmallIntMulti = 0x70,
    LoadFastMulti          = 0xB0,
    StoreFastMulti         = 0xC0,
    UnaryOpMulti           = 0xD0,
    BinaryOpMulti          = 0xD7,
};

typedef const Op* OpPtrRO;

enum class UnOp : uint8_t {
    Pos, Neg, Inv, Int
};

enum class BinOp : uint8_t {
    //CG< binops ../../../git/micropython/py/runtime0.h 35
    Less,
    More,
    Equal,
    LessEqual,
    MoreEqual,
    NotEqual,
    In,
    Is,
    ExceptionMatch,
    InplaceOr,
    InplaceXor,
    InplaceAnd,
    InplaceLshift,
    InplaceRshift,
    InplaceAdd,
    InplaceSubtract,
    InplaceMultiply,
    InplaceMatMultiply,
    InplaceFloorDivide,
    InplaceTrueDivide,
    InplaceModulo,
    InplacePower,
    Or,
    Xor,
    And,
    Lshift,
    Rshift,
    Add,
    Subtract,
    Multiply,
    MatMultiply,
    FloorDivide,
    TrueDivide,
    Modulo,
    Power,
    //CG>
};
